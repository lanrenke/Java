1. 能够理解面向对象的思想
        面向对象是一种程序设计思想、面向对象是用代码高度模拟现实世界。
        面向对象的代码很像人类的自然语言，代码看起来很简单。 zhubajie.eat("西瓜");
        面向对象的语言中最重要的两个概念是：类和对象。
        面向对象就是通过类和对象去描述万千事物的。
2. 能够明确类与对象关系
        必须先有类，才能有对象。
        类是一个模板，对象是具体的。
        类只有一份只是一个描述。对象才是真实存在的
3. 能够掌握类的定义格式
    public class Student{

    }
       1.一个Java代码中可以定义多个类。
        2.但是只能有一个类用public修饰。
        3.public修饰的类的类名必须成为Java代码文件的名称。
        4.实际开发中不建议大家再一个Java代码中定义多个类，不规范！
        5.类名的首字母应该大写，还必须满足驼峰模式，不能是关键字，必须是合法标识符。
4. 能够创建对象，并且使用对象访问类中的成员
   类名 对象名称 = new 构造器;


5.能够理解对象的内存图
  参见图片。
6. 能够说出成员变量和局部变量的区别

 - 在类中的位置不同 `重点`
     成员变量：类中，方法外，描述类或者对象属性。
     局部变量：方法中或者方法声明上(形式参数)，或者构造器中，或者for循环中。

 - 作用范围不一样 `重点`
         成员变量：
            -- 静态成员变量的范围：在任何地方法直接用类名即可访问！
            -- 实例成员变量的范围：在任何地方法直接创建对象，用对象即可访问！
         局部变量：方法中，只在定义开始到}结束。

 - 初始化值的不同 `重点`
         成员变量有默认的初始值。
         局部变量没有默认值，在使用之前必须要赋值。

         成员变量：有默认值
         局部变量：没有默认值。必须先定义，赋值，最后使用

 - 在内存中的位置不同 `了解`
         成员变量：
                -- 实例成员变量：在堆内存。
                -- 静态成员变量：在静态区
         局部变量：栈内存

 - 生命周期不同 `了解`
      成员变量：
            -- 实例成员变量：随着对象的创建而存在，随着对象的消失而消失。属于对象
            -- 静态成员变量：随着类加载而加载，类执行完毕以后才会死亡。属于类
      局部变量：
            随着定义开始出生，随着使用完毕死亡。
7 能够理解构造方法的含义
    构造器 == 构造方法 == 构造函数。 Constructor
    初始化对象并返回对象。

8. 能够理解static关键字
    static修饰的东西属于类，只有一份，称为静态成员。
    可以被类和对象共享访问。

1000个人1000个面向对象。每个人的理解是不一样的。

Student类
public Student(){}                 A 对的
Student(String name){}             B 对的
-----------------------------
public student(String name){}     C  错的
public void Student(String name){} D 错的
static Student(String name){} E      错的