package code.Base07;
/**
 目标：while循环的格式和执行流程。

 流程控制语句：控制代码执行的顺序。
     1.顺序结构
     2.分支结构：if  switch (学完了)
     3.循环结构：for（讲完了） , while（最经典，最重要，比较常用） , do-while（几乎不用）。

 研究while循环。
     作用：控制一段代码反复的执行，直到不满足某个条件才结束循环。
     while循环的格式：
         初始化语句;
         while(循环条件){
             循环体语句;
             迭代语句;
         }
 格式注意：初始化语句，一般定义变量（计数器，控制循环的次数的）
         循环条件是布尔结果：循环正常执行的条件，控制循环的次数。不满足就结束循环。
         迭代语句一般是：自增，自减。
 执行流程:
     先执行初始化语句一次。
     然后判断循环条件，如果循环条件返回true ,进入执行循环体语句，然后执行迭代语句;
     然后判断循环条件，如果循环条件返回true ,进入执行循环体语句，然后执行迭代语句;
     然后判断循环条件，如果循环条件返回true ,进入执行循环体语句，然后执行迭代语句;
     ...
     然后判断循环条件，如果循环条件返回false ,循环结束！

 小结：
     for循环和while循环的执行流程是一模一样的，只是格式不同。
     但是就业班的有些循环必须用while做。开发中还是能用for就会for.
     for循环的中的计算变量i只在for循环范围内有效。
     while的定义开始到方法结束都有效。
 */
public class WhileDemo01 {

    public static void main(String[] args) {

        // 需求：使用while循环输出4行：我爱你。
        int i = 0;
        while (i < 4){

            System.out.println("我爱你 "+(i+1));
            i++;
        }

    }

}
